

https://github.com/ROCm-Developer-Tools/hcc2/bin/README

HCC2 = Heterogenous Compute Compiler Version 2

This bin directory contains scripts to build HCC2

clone_hcc2.sh      -  A script to make sure the necessary repos are cloned and  up to date.
                      See below for a list of these libraries.

build_hcc2.sh      -  Build the HCC2 compiler. This compiler supports cuda clang, openmp, hip, and 
                      the OpenCL frontend for cloc.sh to build device libraries.  It contains a 
                      recent version of the AMD Lightning compiler and the ptx backend. 
                      This compiler works for both Nvidia and AMD Radeon GPUs.
                      Please read the help text,  ./build_hcc2.sh -h

build_utils.sh     -  Builds the HCC2 utilities
                      This installs in /opt/rocm/hcc2 (or $HCC2)

build_atmi.sh      -  Builds early release of ATMI for hcc2.
                      This installs in /opt/rocm/hcc2 (or $HCC2)

build_hip.sh       -  Builds the hip bc libraries and host runtimes needed by hcc2.
                      This also installs in /opt/rocm/hcc2 (or $HCC2)

build_openmp.sh    -  Builds the OpenMP libraries for hcc2.
                      This also installs in /opt/rocm/hcc2 (or $HCC2)

build_libdevice.sh -  Builds the amd bc libraries from rocm-device-libs needed by hcc2.
                      This also installs in /opt/rocm/hcc2 (or $HCC2)

HCC2_VERSION_STRING - File to set the version of HCC2 to clone and build . 

The repositories and branches needed by HCC2 are: 

DIRECTORY NAME *                  HCC2 REPOSITORY **       BRANCH
-------------------------------   ---------------------    ------
$HOME/git/hcc2/hcc2               %rocdev/hcc2             master ***
$HOME/git/hcc2/clang              %rocdev/clang            HCC2-180727 ***
$HOME/git/hcc2/llvm               %rocdev/llvm             HCC2-180727
$HOME/git/hcc2/lld                %rocdev/lld              HCC2-180727
$HOME/git/hcc2/openmp             %rocdev/openmp           HCC2-180727 ***
$HOME/git/hcc2/hip                %rocdev/hip              HCC2-180619
$HOME/git/hcc2/rocm-device-libs   %roc/rocm-device-libs    HCC2-180619
$HOME/git/hcc2/atmi-staging       %roc/atmi-staging        HCC2-180727

   * Clone your repositories here or override with environment variables.
  ** Replace %roc with "https://github.com/RadeonOpenCompute"
  ** Replace %rocdev with "https://github.com/ROCm-Developer-Tools"
 *** These are the primary development repositories for HCC2. They are updated often.

The scripts and example makefiles use these environment variables and these 
defaults if they are not set. This is not a complete list.  See the script headers
for other environment variables that you may override including repo names. 

HCC2              /opt/rocm/hcc2           *
CUDA              /usr/local/cuda          *
HCC2_REPOS        /home/$USER/git/hcc2
NVPTXGPUS         30,35,50,60
BUILD_TYPE        Release
SUDO              set

 * The clang driver uses these environment variables to find device libraries.

If you do not have root access to your machine, you can override the above by setting
the values in your .bashrc or .bash_profile to build your HOME directory.
Here is a sample for your .bash_profile

SUDO="disable"
HCC2=$HOME/install/hcc2
BUILD_TYPE=Debug
NVPTXGPUS=30,35,50,60,65
export SUDO HCC2 NVPTXGPUS BUILD_TYPE

The build scripts will build from the source directories identified by the 
environment variable HCC2_REPOS.

To set alternative installation path for the component INSTALL_<COMPONENT> environment 
variable can be used, e.g. INSTALL_HCC2

To build all components, first clone hcc2 repo and checkout the master branch
to build our development repository.  Checkout a tag such as rel_0.5-1 to build
a released version. 

	git clone https://github.com/ROCm-Developer-Tools/hcc2.git

	git checkout master 

Or to build rel_0.5-1, run this command:

	git checkout rel_0.5-1
	
To be sure you have the latest sources from the git repositories, run this command.
The first time you do this, It could take a long time to clone all the repositories
needed. Subsequent calls will pull the latest updats.

        ./clone_hcc2.sh

After you have all the source repositories, run these scripts in the following order:

	./build_hcc2.sh
	./build_hcc2.sh install

	./build_utils.sh
	./build_utils.sh install

	./build_hip.sh
	./build_hip.sh install

	./build_atmi.sh
	./build_atmi.sh install

	./build_openmp.sh  
	./build_openmp.sh install

	./build_libdevice.sh  
	./build_libdevice.sh install

The first execution of the these scripts does not automatically install in
case their is a build failure.  In case of a build failure, you can restart
the build by running "make" or "make install" in the build directory. 

Bootstrapping:
The compiler created by build_hcc2.sh is needed by all of the components.
So you must build and install hcc2 first before building any of the components.

The utilities created by build_utils.sh are needed by the 4 library components
build_atmi.sh, build_openmp.sh, build_libdevice.sh and build_hip.sh. 
So you must build and install the utilities before building the libraries.
